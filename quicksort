

#quicksort creating function
def quick_sort(A):
    quick_sort2(A,0,len(A)-1)

def quick_sort2(A,low,high):
   if low < high :
     p = partition (A,low,high)
     quick_sort2(A,low,p-1)
     quick_sort2(A,p+1,high)

def get_pivot(A,low,high):
    mid = (low + high) // 2
    pivot = high
    if A[low] < A[mid] :
        if A[mid] < A[high]:
            pivot = mid
    elif A[low] < A[high]
        pivot = low
    return pivot

def partition (A,low,high):
    pivotindex = get_pivot(A,low ,high)
    pivotvalue = A[pivotindex]
    A[low],A[pivotindex] = A[pivotindex],A[low]
    border = low

    for i in range(low,high+1):
       if A[i] < pivotvalue :
        border = border + 1
        A[i],A[border] = A[border],A[i]
    A[low],A[border] = A[border],A[low]

    return border

A = [2,5,3,6,4,5,3,8,6,3,9,5,7,4,6,2,4,5,8,9,1]
quick_sort(A)
print(A)